@startuml

title __TASK's Class Diagram__\n

  package taskman {
    package taskman.backend {
      package taskman.backend.task {
        class Task {
            - description : String
            - estimatedDuration : long
            - acceptableDeviation : double
            - dependencies : ArrayList<Task>
            + Task()
            - Task()
            + getDescription()
            - setDescription()
            + getEstimatedDuration()
            - setEstimatedDuration()
            + getAcceptableDeviation()
            - setAcceptableDeviation()
            + getTimeSpan()
            # setTimeSpan()
            - setTimeSpan()
            + getState()
            # setState()
            + isAvailable()
            + isUnavailable()
            + isExecuting()
            + isFailed()
            + isFinished()
            + endExecution()
            + getDelay()
            + getAlternative()
            # setAlternativeTask()
            + setAlternative()
            + getDependencies()
            - setDependencies()
            # addDependencyTask()
            + addDependency()
            + removeDependency()
            {static} # containsLoop()
            + accept()
        }
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      package taskman.backend.task {
        abstract class TaskState {
            + isAvailable()
            + isUnavailable()
            + isExecuting()
            + isFinished()
            + isFailed()
            + getDelay()
            + endExecution()
            + setAlternative()
            + addDependency()
        }
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      package taskman.backend.task {
        class TaskStateExecuting {
            + TaskStateExecuting()
            + isExecuting()
            + endExecution()
        }
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      package taskman.backend.task {
        class TaskStateFailed {
            + TaskStateFailed()
            + isFailed()
            + setAlternative()
        }
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      package taskman.backend.task {
        class TaskStateFinished {
            + TaskStateFinished()
            + isFinished()
            + getDelay()
        }
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      package taskman.backend.task {
        class TaskStateInactive {
            + TaskStateInactive()
            + isAvailable()
            + isUnavailable()
            + addDependency()
        }
      }
    }
  }
  

  Task -up-|> Entity
  Task o-- TimeSpan : timeSpan
  Task o-- TaskState : state
  Task o-- Task : alternative
  TaskStateExecuting -up-|> TaskState
  TaskStateFailed -up-|> TaskState
  TaskStateFinished -up-|> TaskState
  TaskStateInactive -up-|> TaskState


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
