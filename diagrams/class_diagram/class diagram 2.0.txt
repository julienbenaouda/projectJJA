@startuml

note "In the presentation a simplified diagram is expected." as Note1

class UserInterface {

- Controller controller

+ {static} void main()

}

UserInterface o-- Controller

class Controller {

- Clock clock
+ Controller(LocalDateTime timestamp)
+ void initialize()
+ Clock getClock()
+ void setClock(Clock clock)

+ List<String> getProjectNames()
+ HashMap<String, String> getProjectDetails(String projectName)
+ void addProject(String name, String description, LocalDateTime dueTime)

+ List<Integer> getTasksOfProject(String projectName)
+ HashMap<String, String> getTaskDetails(String projectName, Integer taskId)
+ void addTaskToProject(String projectName, String description, Duration estimatedDuration, Double acceptableDeviation, LocalDateTime startTime)
+ void addAlternativeToTask(Integer taskId, Integer alternativeTaskId)
+ void addDependencyToTask(Integer tastId, Integer dependencyTaskId)
+ void updateTaskStatus(String projectName, Integer taskId, LocalDateTime startTime, LocalDateTime endTime, Status status)

+ LocalDateTime getSystemTime()
+ void updateSystemTime(LocalDateTime timestamp)

+ void saveToFile(String path)
+ void restoreFromFile(String path)
}

Controller o-- User
Controller o-- Clock
Controller o-- Project
Controller o-- Task

class User {
- {static} UserType user
+ {static} boolean canChangeTaskStatus()
}

User o-- UserType

enum UserType {
REGULARUSER
DEVELOPER
}

class Clock {
- {static} LocalDateTime systemTime
- {static} void setSystemTime(LocalDateTime systemTime)

+ Clock(LocalDateTime timestamp)

+ {static} LocalDateTime getSystemTime()
+ {static} void updateSystemTime(LocalDateTime timestamp)

+ {static} String saveToString()
+ {static} void restoreFromString(String status)
}

class Project {

- String name
- String description
- LocalDateTime creationTime
- LocalDateTime dueTime
- List<Task> tasks

+ Project(String name, String description, String creationTime, String dueTime)

- List<Task> getTasks()
- void setName(String name)
- void setDescription(String description)
- void setCreationTime(StringcreationTime)
- void setDueTime(StringdueTime)
+ void addTask(Task task)
+ void removeTask(Task task)

+ String getName()
+ String getDescription()
+ String getCreationTime()
+ String getDueTime()
+ HashMap<String, String> getProjectDetails()

+ ArrayList<Integer> getTaskIds()
+ HashMap<String, String> getTaskDetails(Integer taskId)

+ String saveToString()
+ void restoreFromString(String status)

}

note right of Project : Status and total execution time \n of the project should be calculated!

Project *-- Task

class Task {

- {static} Integer lastTaskId
- Integer Id
- String description
- Duration estimatedDuration
- Double acceptableDeviation
- LocalDateTime startTime
- LocalDateTime endTime
- Status status
- List<Task> dependencies
- Task alternative

+ Task(String description, String estimatedDuration, Double acceptableDeviation, String startTime, String endTime)

- {static} Integer getLastTaskId()
- void setId(Integer id)
- void setDescription(String description)
- void setEstimatedDuration(String duration)
- void setAcceptableDeviation(Double acceptableDeviation)
- void setStartTime(String startTime)
- void setEndTime(String endTime)

+ Integer getId()
+ String getDescription()
+ String getEstimatedDuration()
+ Double getAcceptableDeviation()
+ String getStartTime()
+ String getEndTime()
+ Status getStatus()
+ List<Task> getDependencies()
+ Task getAlternative()
+ HashMap<String, String> getTaskDetails()
+ void updateStatus(LocalDateTime startTime, LocalDateTime endTime, Status status)
+ void addDependency(Task dependency)
+ void removeDependency(Task dependency)
+ void setAlternative(Task alternative)

+ String saveToString()
+ void restoreFromString(String status)

}

note bottom of Task : No loops are allowed \n in the dependency graph!
note left of Task : If tasks depend on each other, \n timespans cannot overlap!
note right of Task : The timestamps are expressed \n in hours and minutes, no seconds!

Task o-- Status

enum Status {
AVAILABLE
UNAVAILABLE
FINISHED
FAILED

+ Boolean isFinalState()

+ String saveToString()
+ void restoreFromString(String status)
}

@enduml
