@startuml

title __BACKEND's Class Diagram__\n

  package taskman {
    package taskman.backend {
      class Clock {
          - time : LocalDateTime
          + getTime()
          + updateSystemTime()
          + accept()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class Controller {
          + Controller()
          + getSystemTime()
          + updateSystemTime()
          + getCurrentUserName()
          + getUserTypes()
          + createUser()
          + login()
          + logout()
          + getProjectNames()
          + getProjectStatus()
          + getProjectDetails()
          + createProject()
          + getNumberOfTasks()
          + getTaskDetails()
          + createTask()
          + addAlternativeToTask()
          + addDependencyToTask()
          + updateTaskStatus()
          + exportSystem()
          {static} + importSystem()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class DetailVisitor {
          - details : HashMap<String, String>
          - currentSystemTime : LocalDateTime
          + DetailVisitor()
          + getDetails()
          - createDetailsMap()
          - getCurrentSystemTime()
          + visitProject()
          + visitTask()
          + visitTimeSpan()
          + visitClock()
          + visitUser()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class Developer {
          + Developer()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      interface Entity {
          {abstract} + accept()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class ImportExportException {
          + ImportExportException()
      }
    }
  }
  

  class WrappedPrintWriter {
      - printWriter : PrintWriter
      ~ WrappedPrintWriter()
      ~ lock()
      ~ println()
  }
  

  class WrappedPrintStream {
      - printStream : PrintStream
      ~ WrappedPrintStream()
      ~ lock()
      ~ println()
  }
  

  abstract class PrintStreamOrWriter {
      - PrintStreamOrWriter()
      {abstract} ~ lock()
      {abstract} ~ println()
  }
  

  class SentinelHolder {
      {static} + STACK_TRACE_ELEMENT_SENTINEL : StackTraceElement
      {static} + STACK_TRACE_SENTINEL : StackTraceElement[]
      - SentinelHolder()
  }
  

  package taskman {
    package taskman.backend {
      class OperationNotPermittedException {
          + OperationNotPermittedException()
      }
    }
  }
  

  class WrappedPrintWriter {
      - printWriter : PrintWriter
      ~ WrappedPrintWriter()
      ~ lock()
      ~ println()
  }
  

  class WrappedPrintStream {
      - printStream : PrintStream
      ~ WrappedPrintStream()
      ~ lock()
      ~ println()
  }
  

  abstract class PrintStreamOrWriter {
      - PrintStreamOrWriter()
      {abstract} ~ lock()
      {abstract} ~ println()
  }
  

  class SentinelHolder {
      {static} + STACK_TRACE_ELEMENT_SENTINEL : StackTraceElement
      {static} + STACK_TRACE_SENTINEL : StackTraceElement[]
      - SentinelHolder()
  }
  

  package taskman {
    package taskman.backend {
      class Project {
          - name : String
          - description : String
          - creationTime : LocalDateTime
          - dueTime : LocalDateTime
          - taskList : ArrayList<Task>
          + Project()
          + createTask()
          - addTaskToList()
          + getStatus()
          + removeTask()
          + getName()
          - setName()
          + getDescription()
          - setDescription()
          + getCreationTime()
          - setCreationTime()
          + getDueTime()
          - setDueTime()
          + getTask()
          + getTasks()
          + getNumberOfTasks()
          + accept()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class ProjectManager {
          + ProjectManager()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class ProjectOrganizer {
          - projects : Collection<Project>
          + ProjectOrganizer()
          + getProjectNames()
          + projectExists()
          + getProject()
          + createProject()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class TimeParser {
          {static} - DATE_TIME_FORMATTER : DateTimeFormatter
          {static} + convertLocalDateTimeToString()
          {static} + convertStringToLocalDateTime()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class TimeSpan {
          - startTime : LocalDateTime
          - endTime : LocalDateTime
          + TimeSpan()
          + getStartTime()
          - setStartTime()
          + getEndTime()
          - setEndTime()
          + canHaveAsEndTime()
          + accept()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      abstract class User {
          - name : String
          - password : String
          + User()
          + getName()
          - setName()
          + getPassword()
          - setPassword()
          + accept()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class UserManager {
          - users : HashMap<String, User>
          + UserManager()
          - getUser()
          + getCurrentUser()
          + hasCurrentUser()
          - setCurrentUser()
          + createUser()
          + getUserTypes()
          - createDeveloper()
          - createProjectManager()
          + login()
          + logout()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      interface Visitor {
          {abstract} + visitProject()
          {abstract} + visitTask()
          {abstract} + visitTimeSpan()
          {abstract} + visitClock()
          {abstract} + visitUser()
      }
    }
  }
  

  package taskman {
    package taskman.backend {
      class XmlObject {
          - doc : Document
          - element : Element
          + XmlObject()
          - XmlObject()
          + exportTo()
          {static} + importFrom()
          + createXmlObject()
          + getXmlObject()
          + getXmlObjects()
          + addAttribute()
          + getAttribute()
          + addText()
          + getText()
          + getTexts()
      }
    }
  }
  

  Clock -up-|> Entity
  Controller o-- Clock : clock
  Controller o-- UserManager : userManager
  Controller o-- ProjectOrganizer : projectOrganizer
  DetailVisitor -up-|> Visitor
  Developer -up-|> User
  ImportExportException +-down- WrappedPrintWriter
  ImportExportException +-down- WrappedPrintStream
  ImportExportException +-down- PrintStreamOrWriter
  ImportExportException +-down- SentinelHolder
  OperationNotPermittedException +-down- WrappedPrintWriter
  OperationNotPermittedException +-down- WrappedPrintStream
  OperationNotPermittedException +-down- PrintStreamOrWriter
  OperationNotPermittedException +-down- SentinelHolder
  Project -up-|> Entity
  ProjectManager -up-|> User
  TimeSpan -up-|> Entity
  User -up-|> Entity
  UserManager o-- User : currentUser


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
