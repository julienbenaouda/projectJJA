@startuml

title "Use Case - Update Task Status - End execution"

-> ":Controller": endTaskExecution(TaskWrapper, LocalDateTime, LocalDateTime, String)
activate ":Controller"

":Controller" -> ":UserManager": getCurrentUser()
activate ":UserManager"
":Controller" <-- ":UserManager": User
deactivate ":UserManager"

":Controller" -> ":Task": endExecution(LocalDateTime, LocalDateTime, String, User)
activate ":Task"

":Task" -> ":Task": getPlan()
activate ":Task"
":Task" <-- ":Task": Plan
deactivate ":Task"

":Task" -> ":Plan": isDeveloperFromPlan(User)
activate ":Plan"
":Task" <-- ":Plan": boolean
deactivate ":Plan"

":Task" -> ":Task": getState()
activate ":Task"
":Task" <-- ":Task": TaskState
deactivate ":Task"

":Task" -> ":TaskStateExecuting": endExecution(Task, ResourceManager, LocalDateTime)
activate ":TaskStateExecuting"

":TaskStateExecuting" -> ":Task": setTimeSpan(TimeSpan)
activate ":Task"
deactivate ":Task"

":TaskStateExecuting" -> ":Task": getPlan()
activate ":Task"
":Task" <-- ":Task": Plan
deactivate ":Task"

":TaskStateExecuting" -> ":Plan": finish(TimeSpan)
activate ":Plan"
deactivate ":Plan"

":TaskStateExecuting" -> ":Task": setState(TaskState)
activate ":Task"
deactivate ":Task"

deactivate ":TaskStateExecuting"

deactivate ":Task"

deactivate ":Controller"

@enduml
