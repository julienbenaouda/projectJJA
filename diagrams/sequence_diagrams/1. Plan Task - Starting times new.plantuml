@startuml

title "Plan Task - Starting times"

-> ":Controller": getStartingTimes(...)
activate ":Controller"

":Controller" -> ":ResourceManager": getStartingTimes(Task, LocalDateTime)
activate ":ResourceManager"

loop (iterator)
    ":ResourceManager" -> ":ResourceManager": isAvailableStartingTime(Task, LocalDateTime)
    activate ":ResourceManager"

    ":ResourceManager" -> ":Task": getRequirements()
    activate ":Task"
    ":Task" --> ":ResourceManager": Map<ResourceType, Integer>
    deactivate ":Task"

    ":ResourceManager" -> ":Task": getDuration()
    activate ":Task"
    ":Task" --> ":ResourceManager": long
    deactivate ":Task"

    loop over resource types

        ":ResourceManager" -> ":ResourceType": hasAvailableResource(TimeSpan)
        activate ":ResourceType"

        loop over resources

        ":ResourceType" -> ":Resource": isAvailable(TimeSpan)
        activate ":Resource"

        ":Resource" -> ":Resource": getReservations()
        ":Resource" --> ":Resource": List<Reservation>
        
        
        loop over reservations
        
            ":Resource" -> ":Reservation": overlaps(TimeSpan)
            activate ":Reservation"
            
            ":Reservation" -> ":TimeSpan": overlaps(TimeSpan)
            activate ":TimeSpan"

            ":TimeSpan" --> ":Reservation": boolean
            deactivate ":TimeSpan"
            
            ":Reservation"--> ":Resource": boolean
            deactivate ":Reservation"
        end

        ":Resource" --> ":ResourceType": boolean
        deactivate ":Resource"

        end

        ":ResourceType" --> ":ResourceManager": boolean
        deactivate ":ResourceType"

    end

    ":ResourceManager" --> ":ResourceManager": boolean
    deactivate ":ResourceManager"
end

":ResourceManager" --> ":Controller": Iterator<LocalDateTime>
deactivate ":ResourceManager"

<-- ":Controller": Iterator<LocalDateTime>
deactivate ":Controller"

@enduml
