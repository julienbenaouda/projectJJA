@startuml

title "Plan Task - Get available resources"

-> ":Controller": getAvailableResources(...)
activate ":Controller"

":Controller" -> ":ResourceManager": getAvailableResources(Task, LocalDateTime)
activate ":ResourceManager"


":ResourceManager" -> ":Task": getRequirements()
activate ":Task"
":Task" --> ":ResourceManager": Map<ResourceType, Integer>
deactivate ":Task"

":ResourceManager" -> ":Task": getDuration()
activate ":Task"
":Task" --> ":ResourceManager": long
deactivate ":Task"

loop over resource types

    ":ResourceManager" -> ":ResourceType": getAvailableResources(TimeSpan)
    activate ":ResourceType"

    loop
        ":ResourceType" -> ":AvailabilityPeriod": overlaps(TimeSpan)
        activate ":AvailabilityPeriod"

        ":AvailabilityPeriod" --> ":ResourceType": boolean
        deactivate ":AvailabilityPeriod"
    end

    loop over resources

        ":ResourceType" -> ":Resource": isAvailable(TimeSpan)
        activate ":Resource"

        ":Resource" -> ":Resource": getReservations()
        ":Resource" --> ":Resource": List<Reservation>
        
        
        loop over reservations
        
            ":Resource" -> ":Reservation": overlaps(TimeSpan)
            activate ":Reservation"
            
            ":Reservation" -> ":TimeSpan": overlaps(TimeSpan)
            activate ":TimeSpan"

            ":TimeSpan" --> ":Reservation": boolean
            deactivate ":TimeSpan"
            
            ":Reservation"--> ":Resource": boolean
            deactivate ":Reservation"
        end

        ":Resource" --> ":ResourceType": boolean
        deactivate ":Resource"

    end

    ":ResourceType" --> ":ResourceManager": Iterator<Resource>
    deactivate ":ResourceType"

end


":ResourceManager" --> ":Controller": Iterator<Resource>
deactivate ":ResourceManager"

<-- ":Controller": Iterator<ResourceView>
deactivate ":Controller"

@enduml
