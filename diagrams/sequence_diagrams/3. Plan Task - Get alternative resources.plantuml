@startuml

title "Plan Task - Get alternative resources"

-> ":Controller": getAlternativeResources(...)
activate ":Controller"

":Controller" -> ":ResourceManager": getAlternativeResources(Resource, Task, LocalDateTime)
activate ":ResourceManager"

":ResourceManager" -> ":Task": getDuration()
activate ":Task"
":Task" --> ":ResourceManager": long
deactivate ":Task"


":ResourceManager" -> ":ResourceType": getAvailableResources(TimeSpan)
activate ":ResourceType"

loop
    ":ResourceType" -> ":AvailabilityPeriod": overlaps(TimeSpan)
    activate ":AvailabilityPeriod"

    ":AvailabilityPeriod" --> ":ResourceType": boolean
    deactivate ":AvailabilityPeriod"
end

loop over resources

        ":ResourceType" -> ":Resource": isAvailable(TimeSpan)
        activate ":Resource"

        ":Resource" -> ":Resource": getReservations()
        ":Resource" --> ":Resource": List<Reservation>
        
        
        loop over reservations
        
            ":Resource" -> ":Reservation": overlaps(TimeSpan)
            activate ":Reservation"
            
            ":Reservation" -> ":TimeSpan": overlaps(TimeSpan)
            activate ":TimeSpan"

            ":TimeSpan" --> ":Reservation": boolean
            deactivate ":TimeSpan"
            
            ":Reservation"--> ":Resource": boolean
            deactivate ":Reservation"
        end

        ":Resource" --> ":ResourceType": boolean
        deactivate ":Resource"

end

":ResourceType" --> ":ResourceManager": Iterator<Resource>
deactivate ":ResourceType"


":ResourceManager" --> ":Controller": Iterator<Resource>
deactivate ":ResourceManager"

<-- ":Controller": Iterator<ResourceWrapper>
deactivate ":Controller"

@enduml
