@startuml

title "Plan Task - Starting times"

-> ":Controller": getStartingTimes(...)
activate ":Controller"

":Controller" -> ":ResourceManager": getNextAvailableStartingTime(Task, LocalDateTime)
activate ":ResourceManager"

loop
    ":ResourceManager" -> ":ResourceManager": isAvailableStartingTime(Task, LocalDateTime)
    activate ":ResourceManager"

    ":ResourceManager" -> ":Task": getRequirements()
    activate ":Task"
    ":Task" --> ":ResourceManager": Map<ResourceType, Integer>
    deactivate ":Task"

    ":ResourceManager" -> ":Task": getDuration()
    activate ":Task"
    ":Task" --> ":ResourceManager": long
    deactivate ":Task"

    loop over resource types

        ":ResourceManager" -> ":ResourceManager": hasAvailableResource(ResourceType, TimeSpan)
        activate ":ResourceManager"

        ":ResourceManager" -> ":ResourceManager": getResources(ResourceType)
        activate ":ResourceManager"
        ":ResourceManager" --> ":ResourceManager": List<Resource>
        deactivate ":ResourceManager"

        loop over resources

            ":ResourceManager" -> ":Resource": isAvailable(TimeSpan)
            activate ":Resource"

            ":Resource" -> ":ResourceType": isAvailable(TimeSpan)
            activate ":ResourceType"
            ":ResourceType" --> ":Resource": boolean
            deactivate ":ResourceType"

            ":Resource" --> ":ResourceManager": boolean
            deactivate ":Resource"

        end

        ":ResourceManager" --> ":ResourceManager": boolean
        deactivate ":ResourceManager"

    end

    ":ResourceManager" --> ":ResourceManager": boolean
    deactivate ":ResourceManager"
end

":ResourceManager" --> ":Controller": List<LocalDateTime>
deactivate ":ResourceManager"

<-- ":Controller": List<LocalDateTime>
deactivate ":Controller"

@enduml
